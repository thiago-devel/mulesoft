<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
	<http:listener-config name="image-httpListenerConfig"
		host="0.0.0.0" port="8081" doc:name="HTTP Listener Configuration" />
	<apikit:config name="image-config" raml="image.raml"
		consoleEnabled="false" doc:name="Router" keepRamlBaseUri="false"/>
	<http:request-config name="HTTP_Request_Configuration"
		host="0.0.0.0"  port="8081" basePath="api" doc:name="HTTP Request Configuration" />
	<flow name="image-main">
		<http:listener config-ref="image-httpListenerConfig" 
			path="/api/*" doc:name="HTTP" />
		<apikit:router config-ref="image-config" doc:name="APIkit Router"   />
		<exception-strategy ref="image-apiKitGlobalExceptionMapping"
			doc:name="Reference Exception Strategy" />
	</flow>
	<flow name="image-console">
		<http:listener config-ref="image-httpListenerConfig"
			path="/console/*" doc:name="HTTP" />
		<apikit:console config-ref="image-config" doc:name="APIkit Console" />
	</flow>
	<flow name="get:/collections:image-config">
		<set-payload
			value="{&#xA;collectionLists: Array[collection1,collection2]&#xA;}"
			doc:name="Set Payload" />
	</flow>
	<flow name="get:/bucket/storedImages:image-config">
		<flow-ref name="aws-s3-retrieve-images" doc:name="aws-s3-retrieve-images" />
		<set-payload value="{&#xA;result: data&#xA;}" doc:name="Set Payload" />
	</flow>
	<flow name="get:/bucket/storedImages/{imageId}:image-config">
		<flow-ref name="aws-s3-retrieve-images" doc:name="aws-s3-retrieve-images" />
		<set-payload value="{
result: data
}" doc:name="Copy_of_Set Payload" />
	</flow>
	<flow name="post:/bucket/newImage:image-config">
        <logger message="inbound payload #[payload]" level="INFO" doc:name="Logger"/>
		<flow-ref name="aws-s3-store-images" doc:name="aws-s3-store-images" />
	</flow>
	<flow name="get:/loadedImage:image-config">
		<set-payload
			value="{&#xA;  &quot;imageName&quot;:&quot;imageUrl&quot;,&#xA;  &quot;lastName&quot;:&quot;Doe&quot;,&#xA;  &quot;firstName&quot;:&quot;Jane&quot;,&#xA;  &quot;title&quot;:&quot;Expert&quot;&#xA;}"
			doc:name="Set Payload" />
	</flow>
	<flow name="get:/collections/{collectionId}/index:image-config">
		<set-payload value="#[NullPayload.getInstance()]"
			doc:name="Set Payload" />
	</flow>
	<flow name="get:/collections/{collectionId}:image-config">
		<set-payload value="#[NullPayload.getInstance()]"
			doc:name="Set Payload" />
	</flow>
	<flow name="post:/loadImage:image-config">
		<flow-ref name="rekognition-search-for-face" doc:name="rekognition-search-for-face" />
	</flow>
	<flow name="post:/faceIndex:image-config">
		<http:request config-ref="HTTP_Request_Configuration"
			path="compare/image" method="POST" doc:name="HTTP-POST-PROCESSAPI-BASE64">
			<http:request-builder>
				<http:header headerName="Content-Type" value="application/json" />
			</http:request-builder>
		</http:request>
	</flow>
	<flow name="get:/faceIndex:image-config">
		<set-payload value="#[NullPayload.getInstance()]"
			doc:name="Set Payload" />
	</flow>
	<apikit:mapping-exception-strategy
		name="image-apiKitGlobalExceptionMapping">
		<apikit:mapping statusCode="404">
			<apikit:exception
				value="org.mule.module.apikit.exception.NotFoundException" />
			<set-property propertyName="Content-Type" value="application/json"
				doc:name="Property" />
			<set-payload
				value="{ &quot;message&quot;: &quot;Resource not found&quot; }"
				doc:name="Set Payload" />
		</apikit:mapping>
		<apikit:mapping statusCode="405">
			<apikit:exception
				value="org.mule.module.apikit.exception.MethodNotAllowedException" />
			<set-property propertyName="Content-Type" value="application/json"
				doc:name="Property" />
			<set-payload
				value="{ &quot;message&quot;: &quot;Method not allowed&quot; }"
				doc:name="Set Payload" />
		</apikit:mapping>
		<apikit:mapping statusCode="415">
			<apikit:exception
				value="org.mule.module.apikit.exception.UnsupportedMediaTypeException" />
			<set-property propertyName="Content-Type" value="application/json"
				doc:name="Property" />
			<set-payload
				value="{ &quot;message&quot;: &quot;Unsupported media type&quot; }"
				doc:name="Set Payload" />
		</apikit:mapping>
		<apikit:mapping statusCode="406">
			<apikit:exception
				value="org.mule.module.apikit.exception.NotAcceptableException" />
			<set-property propertyName="Content-Type" value="application/json"
				doc:name="Property" />
			<set-payload value="{ &quot;message&quot;: &quot;Not acceptable&quot; }"
				doc:name="Set Payload" />
		</apikit:mapping>
		<apikit:mapping statusCode="400">
			<apikit:exception
				value="org.mule.module.apikit.exception.BadRequestException" />
			<set-property propertyName="Content-Type" value="application/json"
				doc:name="Property" />
			<set-payload value="{ &quot;message&quot;: &quot;Bad request&quot; }"
				doc:name="Set Payload" />
		</apikit:mapping>
	</apikit:mapping-exception-strategy>
</mule>
